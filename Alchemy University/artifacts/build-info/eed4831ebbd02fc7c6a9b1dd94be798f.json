{
	"id": "eed4831ebbd02fc7c6a9b1dd94be798f",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.20",
	"solcLongVersion": "0.8.20+commit.a1b79de6",
	"input": {
		"language": "Solidity",
		"sources": {
			"Alchemy University/Self Destruct.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity 0.8.20;\n\n/*\nSelf-Destruct Repercussions\nWhen you call selfdestruct on a contract account, the bytecode is cleared. The contract will no longer be able to respond to ether transfers.\n\nIf you are going to use selfdestruct, you should be sure that nobody will accidentally send ether to your contract in the future. There may be no recourse for getting that ether back if they do. Future funds sent to this address could be locked forever! \n\n You might assume that once a contract's code is cleared from an address, that's the end of the story. However, with the later introduction of the CREATE2 opcode, you now have the ability to redeploy the same code to the same address. Unlike the traditional method, which relies on the sender's address and account nonce, CREATE2 uses a salt and the contract creation code to determine the contract address. Intrigued? Check out this tutorial for more.\n\nInstead of self-destructing the contract, you could consider setting storage variables so that nobody can call the function. Then you revert the transaction if they try to call a function or send ether in the future! This is probably the safest course of action.\n\n We will talk about how to do this when we discuss reverting! \n\n Contracts can destroy themselves by using the SELFDESTRUCT opcode on the EVM! This opcode actually refunds ether in order to incentivize cleaning up the blockchain of unused contracts.\n\nLet's see it in action:\n\ncontract Contract {\n    uint _countdown = 10;\n\n    constructor() payable { }\n\n    function tick() public {\n        _countdown--;\n        if(_countdown == 0) {\n            // NOTE: we must cast to address payable here\n            // some solidity methods protect \n            // against accidentally sending ether\n            selfdestruct(payable(msg.sender));\n        }\n    }\n}\n After 10 calls to the tick function the Contract will selfdestruct! \n\nSo you might be wondering, why did we provide msg.sender as the argument to selfdestruct? \n\nThe address provided to the selfdestruct function gets all of the ether remaining in the contract!\nEther sent to the payable constructor will be refunded to the final caller of the tick function.\n*/\n\n// refer link https://university.alchemy.com/course/solidity/sc/64d93ca0eeb3ce0002df34a9/stage/64d93ca0eeb3ce0002df34b8\ncontract Contract {\n    address public owner;\n    address public charity;\n    \n    constructor(address _charity){\n        owner = msg.sender;\n        charity = _charity;\n\n    }\n\n    receive() external payable{}\n\n    function tip() public payable{\n        (bool s, ) = owner.call{value: msg.value}(\"\");\n        require(s);\n    }\n\n    //When the donate function is called, trigger a selfdestruct in the contract!\n\n    //The selfdestruct will send all remaining funds to the address passed in,\n    //so it might be a good candidate to replace the existing functionality in your donate function by sending the funds to the charity!\n    function donate() public {\n        (bool s,) = charity.call{value:address(this).balance}(\"\");\n        require(s);\n        // selfdestruct(payable(charity));\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"Alchemy University/Self Destruct.sol": {
				"Contract": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_charity",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "charity",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "donate",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tip",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Alchemy University/Self Destruct.sol\":2342:3138  contract Contract {... */\n  mstore(0x40, 0x80)\n    /* \"Alchemy University/Self Destruct.sol\":2425:2518  constructor(address _charity){... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"Alchemy University/Self Destruct.sol\":2472:2482  msg.sender */\n  caller\n    /* \"Alchemy University/Self Destruct.sol\":2464:2469  owner */\n  0x00\n  dup1\n    /* \"Alchemy University/Self Destruct.sol\":2464:2482  owner = msg.sender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"Alchemy University/Self Destruct.sol\":2502:2510  _charity */\n  dup1\n    /* \"Alchemy University/Self Destruct.sol\":2492:2499  charity */\n  0x01\n  0x00\n    /* \"Alchemy University/Self Destruct.sol\":2492:2510  charity = _charity */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"Alchemy University/Self Destruct.sol\":2425:2518  constructor(address _charity){... */\n  pop\n    /* \"Alchemy University/Self Destruct.sol\":2342:3138  contract Contract {... */\n  jump(tag_6)\n    /* \"#utility.yul\":88:205   */\ntag_8:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_10:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_11:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_20\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_10\n  jump\t// in\ntag_20:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_12:\n    /* \"#utility.yul\":641:665   */\n  tag_22\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_11\n  jump\t// in\ntag_22:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_23\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  dup1\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_23:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_13:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_25\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_12\n  jump\t// in\ntag_25:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:1196   */\ntag_3:\n    /* \"#utility.yul\":915:921   */\n  0x00\n    /* \"#utility.yul\":964:966   */\n  0x20\n    /* \"#utility.yul\":952:961   */\n  dup3\n    /* \"#utility.yul\":943:950   */\n  dup5\n    /* \"#utility.yul\":939:962   */\n  sub\n    /* \"#utility.yul\":935:967   */\n  slt\n    /* \"#utility.yul\":932:1051   */\n  iszero\n  tag_27\n  jumpi\n    /* \"#utility.yul\":970:1049   */\n  tag_28\n  tag_8\n  jump\t// in\ntag_28:\n    /* \"#utility.yul\":932:1051   */\ntag_27:\n    /* \"#utility.yul\":1090:1091   */\n  0x00\n    /* \"#utility.yul\":1115:1179   */\n  tag_29\n    /* \"#utility.yul\":1171:1178   */\n  dup5\n    /* \"#utility.yul\":1162:1168   */\n  dup3\n    /* \"#utility.yul\":1151:1160   */\n  dup6\n    /* \"#utility.yul\":1147:1169   */\n  add\n    /* \"#utility.yul\":1115:1179   */\n  tag_13\n  jump\t// in\ntag_29:\n    /* \"#utility.yul\":1105:1179   */\n  swap2\n  pop\n    /* \"#utility.yul\":1061:1189   */\n  pop\n    /* \"#utility.yul\":845:1196   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"Alchemy University/Self Destruct.sol\":2342:3138  contract Contract {... */\ntag_6:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"Alchemy University/Self Destruct.sol\":2342:3138  contract Contract {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x2755cd2d\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x934aa023\n      eq\n      tag_5\n      jumpi\n      dup1\n      0xed88c68e\n      eq\n      tag_6\n      jumpi\n      jump(tag_2)\n    tag_1:\n      jumpi(tag_2, calldatasize)\n      stop\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"Alchemy University/Self Destruct.sol\":2558:2669  function tip() public payable{... */\n    tag_3:\n      tag_9\n      tag_10\n      jump\t// in\n    tag_9:\n      stop\n        /* \"Alchemy University/Self Destruct.sol\":2366:2386  address public owner */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_11\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_11:\n      pop\n      tag_12\n      tag_13\n      jump\t// in\n    tag_12:\n      mload(0x40)\n      tag_14\n      swap2\n      swap1\n      tag_15\n      jump\t// in\n    tag_14:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Alchemy University/Self Destruct.sol\":2392:2414  address public charity */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_16\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_16:\n      pop\n      tag_17\n      tag_18\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      tag_19\n      swap2\n      swap1\n      tag_15\n      jump\t// in\n    tag_19:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Alchemy University/Self Destruct.sol\":2974:3136  function donate() public {... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_20\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_20:\n      pop\n      tag_21\n      tag_22\n      jump\t// in\n    tag_21:\n      stop\n        /* \"Alchemy University/Self Destruct.sol\":2558:2669  function tip() public payable{... */\n    tag_10:\n        /* \"Alchemy University/Self Destruct.sol\":2598:2604  bool s */\n      0x00\n        /* \"Alchemy University/Self Destruct.sol\":2610:2615  owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Alchemy University/Self Destruct.sol\":2610:2620  owner.call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Alchemy University/Self Destruct.sol\":2628:2637  msg.value */\n      callvalue\n        /* \"Alchemy University/Self Destruct.sol\":2610:2642  owner.call{value: msg.value}(\"\") */\n      mload(0x40)\n      tag_24\n      swap1\n      tag_25\n      jump\t// in\n    tag_24:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_28\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_27)\n    tag_28:\n      0x60\n      swap2\n      pop\n    tag_27:\n      pop\n        /* \"Alchemy University/Self Destruct.sol\":2597:2642  (bool s, ) = owner.call{value: msg.value}(\"\") */\n      pop\n      swap1\n      pop\n        /* \"Alchemy University/Self Destruct.sol\":2660:2661  s */\n      dup1\n        /* \"Alchemy University/Self Destruct.sol\":2652:2662  require(s) */\n      tag_29\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_29:\n        /* \"Alchemy University/Self Destruct.sol\":2587:2669  {... */\n      pop\n        /* \"Alchemy University/Self Destruct.sol\":2558:2669  function tip() public payable{... */\n      jump\t// out\n        /* \"Alchemy University/Self Destruct.sol\":2366:2386  address public owner */\n    tag_13:\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"Alchemy University/Self Destruct.sol\":2392:2414  address public charity */\n    tag_18:\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"Alchemy University/Self Destruct.sol\":2974:3136  function donate() public {... */\n    tag_22:\n        /* \"Alchemy University/Self Destruct.sol\":3010:3016  bool s */\n      0x00\n        /* \"Alchemy University/Self Destruct.sol\":3021:3028  charity */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Alchemy University/Self Destruct.sol\":3021:3033  charity.call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Alchemy University/Self Destruct.sol\":3040:3061  address(this).balance */\n      selfbalance\n        /* \"Alchemy University/Self Destruct.sol\":3021:3066  charity.call{value:address(this).balance}(\"\") */\n      mload(0x40)\n      tag_31\n      swap1\n      tag_25\n      jump\t// in\n    tag_31:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_34\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_33)\n    tag_34:\n      0x60\n      swap2\n      pop\n    tag_33:\n      pop\n        /* \"Alchemy University/Self Destruct.sol\":3009:3066  (bool s,) = charity.call{value:address(this).balance}(\"\") */\n      pop\n      swap1\n      pop\n        /* \"Alchemy University/Self Destruct.sol\":3084:3085  s */\n      dup1\n        /* \"Alchemy University/Self Destruct.sol\":3076:3086  require(s) */\n      tag_35\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_35:\n        /* \"Alchemy University/Self Destruct.sol\":2999:3136  {... */\n      pop\n        /* \"Alchemy University/Self Destruct.sol\":2974:3136  function donate() public {... */\n      jump\t// out\n        /* \"#utility.yul\":7:133   */\n    tag_36:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":84:126   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":77:82   */\n      dup3\n        /* \"#utility.yul\":73:127   */\n      and\n        /* \"#utility.yul\":62:127   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:133   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":139:235   */\n    tag_37:\n        /* \"#utility.yul\":176:183   */\n      0x00\n        /* \"#utility.yul\":205:229   */\n      tag_45\n        /* \"#utility.yul\":223:228   */\n      dup3\n        /* \"#utility.yul\":205:229   */\n      tag_36\n      jump\t// in\n    tag_45:\n        /* \"#utility.yul\":194:229   */\n      swap1\n      pop\n        /* \"#utility.yul\":139:235   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":241:359   */\n    tag_38:\n        /* \"#utility.yul\":328:352   */\n      tag_47\n        /* \"#utility.yul\":346:351   */\n      dup2\n        /* \"#utility.yul\":328:352   */\n      tag_37\n      jump\t// in\n    tag_47:\n        /* \"#utility.yul\":323:326   */\n      dup3\n        /* \"#utility.yul\":316:353   */\n      mstore\n        /* \"#utility.yul\":241:359   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":365:587   */\n    tag_15:\n        /* \"#utility.yul\":458:462   */\n      0x00\n        /* \"#utility.yul\":496:498   */\n      0x20\n        /* \"#utility.yul\":485:494   */\n      dup3\n        /* \"#utility.yul\":481:499   */\n      add\n        /* \"#utility.yul\":473:499   */\n      swap1\n      pop\n        /* \"#utility.yul\":509:580   */\n      tag_49\n        /* \"#utility.yul\":577:578   */\n      0x00\n        /* \"#utility.yul\":566:575   */\n      dup4\n        /* \"#utility.yul\":562:579   */\n      add\n        /* \"#utility.yul\":553:559   */\n      dup5\n        /* \"#utility.yul\":509:580   */\n      tag_38\n      jump\t// in\n    tag_49:\n        /* \"#utility.yul\":365:587   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":593:740   */\n    tag_39:\n        /* \"#utility.yul\":694:705   */\n      0x00\n        /* \"#utility.yul\":731:734   */\n      dup2\n        /* \"#utility.yul\":716:734   */\n      swap1\n      pop\n        /* \"#utility.yul\":593:740   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":746:860   */\n    tag_40:\n      pop\n      jump\t// out\n        /* \"#utility.yul\":866:1264   */\n    tag_41:\n        /* \"#utility.yul\":1025:1028   */\n      0x00\n        /* \"#utility.yul\":1046:1129   */\n      tag_53\n        /* \"#utility.yul\":1127:1128   */\n      0x00\n        /* \"#utility.yul\":1122:1125   */\n      dup4\n        /* \"#utility.yul\":1046:1129   */\n      tag_39\n      jump\t// in\n    tag_53:\n        /* \"#utility.yul\":1039:1129   */\n      swap2\n      pop\n        /* \"#utility.yul\":1138:1231   */\n      tag_54\n        /* \"#utility.yul\":1227:1230   */\n      dup3\n        /* \"#utility.yul\":1138:1231   */\n      tag_40\n      jump\t// in\n    tag_54:\n        /* \"#utility.yul\":1256:1257   */\n      0x00\n        /* \"#utility.yul\":1251:1254   */\n      dup3\n        /* \"#utility.yul\":1247:1258   */\n      add\n        /* \"#utility.yul\":1240:1258   */\n      swap1\n      pop\n        /* \"#utility.yul\":866:1264   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1270:1649   */\n    tag_25:\n        /* \"#utility.yul\":1454:1457   */\n      0x00\n        /* \"#utility.yul\":1476:1623   */\n      tag_56\n        /* \"#utility.yul\":1619:1622   */\n      dup3\n        /* \"#utility.yul\":1476:1623   */\n      tag_41\n      jump\t// in\n    tag_56:\n        /* \"#utility.yul\":1469:1623   */\n      swap2\n      pop\n        /* \"#utility.yul\":1640:1643   */\n      dup2\n        /* \"#utility.yul\":1633:1643   */\n      swap1\n      pop\n        /* \"#utility.yul\":1270:1649   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212200ec3e64562dd40db75f49bd2a3750649ccb40be808122e0fb4294e35ae2b2dfc64736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_20": {
									"entryPoint": null,
									"id": 20,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 256,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 276,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 217,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 186,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 182,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 234,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1199:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:1",
														"type": ""
													}
												],
												"src": "7:75:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:81:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:65:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "411:42:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "400:54:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:1",
														"type": ""
													}
												],
												"src": "334:126:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "511:51:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "521:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "532:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "493:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "503:7:1",
														"type": ""
													}
												],
												"src": "466:96:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "611:79:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "668:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "677:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "680:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "624:43:1"
															},
															"nodeType": "YulIf",
															"src": "621:63:1"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "604:5:1",
														"type": ""
													}
												],
												"src": "568:122:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "759:80:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "769:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "778:13:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "800:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "800:33:1"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "737:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "745:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "753:5:1",
														"type": ""
													}
												],
												"src": "696:143:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "922:274:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "968:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "970:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "970:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "970:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "943:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "952:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "939:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "939:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "964:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "935:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "935:32:1"
															},
															"nodeType": "YulIf",
															"src": "932:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "1061:128:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1076:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1090:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1080:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1105:74:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1151:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1162:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1147:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1147:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1171:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1115:31:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1115:64:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1105:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "892:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "903:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "915:6:1",
														"type": ""
													}
												],
												"src": "845:351:1"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b5060405161044d38038061044d83398181016040528101906100319190610114565b335f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508060015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505061013f565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6100e3826100ba565b9050919050565b6100f3816100d9565b81146100fd575f80fd5b50565b5f8151905061010e816100ea565b92915050565b5f60208284031215610129576101286100b6565b5b5f61013684828501610100565b91505092915050565b6103018061014c5f395ff3fe608060405260043610610042575f3560e01c80632755cd2d1461004d5780638da5cb5b14610057578063934aa02314610081578063ed88c68e146100ab57610049565b3661004957005b5f80fd5b6100556100c1565b005b348015610062575f80fd5b5061006b610155565b6040516100789190610271565b60405180910390f35b34801561008c575f80fd5b50610095610178565b6040516100a29190610271565b60405180910390f35b3480156100b6575f80fd5b506100bf61019d565b005b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1634604051610106906102b7565b5f6040518083038185875af1925050503d805f8114610140576040519150601f19603f3d011682016040523d82523d5f602084013e610145565b606091505b5050905080610152575f80fd5b50565b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16476040516101e3906102b7565b5f6040518083038185875af1925050503d805f811461021d576040519150601f19603f3d011682016040523d82523d5f602084013e610222565b606091505b505090508061022f575f80fd5b50565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61025b82610232565b9050919050565b61026b81610251565b82525050565b5f6020820190506102845f830184610262565b92915050565b5f81905092915050565b50565b5f6102a25f8361028a565b91506102ad82610294565b5f82019050919050565b5f6102c182610297565b915081905091905056fea26469706673582212200ec3e64562dd40db75f49bd2a3750649ccb40be808122e0fb4294e35ae2b2dfc64736f6c63430008140033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x44D CODESIZE SUB DUP1 PUSH2 0x44D DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x31 SWAP2 SWAP1 PUSH2 0x114 JUMP JUMPDEST CALLER PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x1 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP PUSH2 0x13F JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xE3 DUP3 PUSH2 0xBA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF3 DUP2 PUSH2 0xD9 JUMP JUMPDEST DUP2 EQ PUSH2 0xFD JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x10E DUP2 PUSH2 0xEA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x129 JUMPI PUSH2 0x128 PUSH2 0xB6 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x136 DUP5 DUP3 DUP6 ADD PUSH2 0x100 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x301 DUP1 PUSH2 0x14C PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x42 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x2755CD2D EQ PUSH2 0x4D JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x57 JUMPI DUP1 PUSH4 0x934AA023 EQ PUSH2 0x81 JUMPI DUP1 PUSH4 0xED88C68E EQ PUSH2 0xAB JUMPI PUSH2 0x49 JUMP JUMPDEST CALLDATASIZE PUSH2 0x49 JUMPI STOP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x55 PUSH2 0xC1 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x62 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x6B PUSH2 0x155 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x78 SWAP2 SWAP1 PUSH2 0x271 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x95 PUSH2 0x178 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA2 SWAP2 SWAP1 PUSH2 0x271 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xBF PUSH2 0x19D JUMP JUMPDEST STOP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLVALUE PUSH1 0x40 MLOAD PUSH2 0x106 SWAP1 PUSH2 0x2B7 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x140 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x145 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x152 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SELFBALANCE PUSH1 0x40 MLOAD PUSH2 0x1E3 SWAP1 PUSH2 0x2B7 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x21D JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x222 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x22F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x25B DUP3 PUSH2 0x232 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x26B DUP2 PUSH2 0x251 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x284 PUSH0 DUP4 ADD DUP5 PUSH2 0x262 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0x2A2 PUSH0 DUP4 PUSH2 0x28A JUMP JUMPDEST SWAP2 POP PUSH2 0x2AD DUP3 PUSH2 0x294 JUMP JUMPDEST PUSH0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2C1 DUP3 PUSH2 0x297 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE 0xC3 0xE6 GASLIMIT PUSH3 0xDD40DB PUSH22 0xF49BD2A3750649CCB40BE808122E0FB4294E35AE2B2D 0xFC PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ",
							"sourceMap": "2342:796:0:-:0;;;2425:93;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2472:10;2464:5;;:18;;;;;;;;;;;;;;;;;;2502:8;2492:7;;:18;;;;;;;;;;;;;;;;;;2425:93;2342:796;;88:117:1;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:351::-;915:6;964:2;952:9;943:7;939:23;935:32;932:119;;;970:79;;:::i;:::-;932:119;1090:1;1115:64;1171:7;1162:6;1151:9;1147:22;1115:64;:::i;:::-;1105:74;;1061:128;845:351;;;;:::o;2342:796:0:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_24": {
									"entryPoint": null,
									"id": 24,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@charity_5": {
									"entryPoint": 376,
									"id": 5,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@donate_63": {
									"entryPoint": 413,
									"id": 63,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@owner_3": {
									"entryPoint": 341,
									"id": 3,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@tip_42": {
									"entryPoint": 193,
									"id": 42,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 610,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 663,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 695,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 625,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 650,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 593,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 562,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470": {
									"entryPoint": 660,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1652:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "52:81:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "62:65:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "77:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "84:42:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "73:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "73:54:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "34:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "44:7:1",
														"type": ""
													}
												],
												"src": "7:126:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "184:51:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "194:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "223:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "205:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "205:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "194:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "166:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "176:7:1",
														"type": ""
													}
												],
												"src": "139:96:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "306:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "323:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "346:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "328:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "328:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "316:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "316:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "316:37:1"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "294:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "301:3:1",
														"type": ""
													}
												],
												"src": "241:118:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "463:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "473:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "485:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "496:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "481:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "481:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "473:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "553:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "566:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "577:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "562:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "562:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "509:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "509:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "509:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "435:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "447:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "458:4:1",
														"type": ""
													}
												],
												"src": "365:222:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "706:34:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "716:18:1",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "731:3:1"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "716:11:1"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "678:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "683:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "694:11:1",
														"type": ""
													}
												],
												"src": "593:147:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "852:8:1",
													"statements": []
												},
												"name": "store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "844:6:1",
														"type": ""
													}
												],
												"src": "746:114:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1029:235:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1039:90:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1122:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1127:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1046:75:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1046:83:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "1039:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1227:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"nodeType": "YulIdentifier",
																	"src": "1138:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1138:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1138:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1240:18:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1251:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1256:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1247:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1247:11:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "1240:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1017:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1025:3:1",
														"type": ""
													}
												],
												"src": "866:398:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1458:191:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1469:154:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1619:3:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1476:141:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1476:147:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "1469:3:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1633:10:1",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "1640:3:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "1633:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1445:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1454:3:1",
														"type": ""
													}
												],
												"src": "1270:379:1"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(memPtr) {\n\n    }\n\n    function abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, 0)\n        store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(pos)\n        end := add(pos, 0)\n    }\n\n    function abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos ) -> end {\n\n        pos := abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        end := pos\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405260043610610042575f3560e01c80632755cd2d1461004d5780638da5cb5b14610057578063934aa02314610081578063ed88c68e146100ab57610049565b3661004957005b5f80fd5b6100556100c1565b005b348015610062575f80fd5b5061006b610155565b6040516100789190610271565b60405180910390f35b34801561008c575f80fd5b50610095610178565b6040516100a29190610271565b60405180910390f35b3480156100b6575f80fd5b506100bf61019d565b005b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1634604051610106906102b7565b5f6040518083038185875af1925050503d805f8114610140576040519150601f19603f3d011682016040523d82523d5f602084013e610145565b606091505b5050905080610152575f80fd5b50565b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16476040516101e3906102b7565b5f6040518083038185875af1925050503d805f811461021d576040519150601f19603f3d011682016040523d82523d5f602084013e610222565b606091505b505090508061022f575f80fd5b50565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61025b82610232565b9050919050565b61026b81610251565b82525050565b5f6020820190506102845f830184610262565b92915050565b5f81905092915050565b50565b5f6102a25f8361028a565b91506102ad82610294565b5f82019050919050565b5f6102c182610297565b915081905091905056fea26469706673582212200ec3e64562dd40db75f49bd2a3750649ccb40be808122e0fb4294e35ae2b2dfc64736f6c63430008140033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x42 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x2755CD2D EQ PUSH2 0x4D JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x57 JUMPI DUP1 PUSH4 0x934AA023 EQ PUSH2 0x81 JUMPI DUP1 PUSH4 0xED88C68E EQ PUSH2 0xAB JUMPI PUSH2 0x49 JUMP JUMPDEST CALLDATASIZE PUSH2 0x49 JUMPI STOP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x55 PUSH2 0xC1 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x62 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x6B PUSH2 0x155 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x78 SWAP2 SWAP1 PUSH2 0x271 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x95 PUSH2 0x178 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA2 SWAP2 SWAP1 PUSH2 0x271 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xBF PUSH2 0x19D JUMP JUMPDEST STOP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLVALUE PUSH1 0x40 MLOAD PUSH2 0x106 SWAP1 PUSH2 0x2B7 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x140 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x145 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x152 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SELFBALANCE PUSH1 0x40 MLOAD PUSH2 0x1E3 SWAP1 PUSH2 0x2B7 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x21D JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x222 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x22F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x25B DUP3 PUSH2 0x232 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x26B DUP2 PUSH2 0x251 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x284 PUSH0 DUP4 ADD DUP5 PUSH2 0x262 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0x2A2 PUSH0 DUP4 PUSH2 0x28A JUMP JUMPDEST SWAP2 POP PUSH2 0x2AD DUP3 PUSH2 0x294 JUMP JUMPDEST PUSH0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2C1 DUP3 PUSH2 0x297 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE 0xC3 0xE6 GASLIMIT PUSH3 0xDD40DB PUSH22 0xF49BD2A3750649CCB40BE808122E0FB4294E35AE2B2D 0xFC PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ",
							"sourceMap": "2342:796:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2558:111;;;:::i;:::-;;2366:20;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2392:22;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2974:162;;;;;;;;;;;;;:::i;:::-;;2558:111;2598:6;2610:5;;;;;;;;;;;:10;;2628:9;2610:32;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2597:45;;;2660:1;2652:10;;;;;;2587:82;2558:111::o;2366:20::-;;;;;;;;;;;;:::o;2392:22::-;;;;;;;;;;;;;:::o;2974:162::-;3010:6;3021:7;;;;;;;;;;;:12;;3040:21;3021:45;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3009:57;;;3084:1;3076:10;;;;;;2999:137;2974:162::o;7:126:1:-;44:7;84:42;77:5;73:54;62:65;;7:126;;;:::o;139:96::-;176:7;205:24;223:5;205:24;:::i;:::-;194:35;;139:96;;;:::o;241:118::-;328:24;346:5;328:24;:::i;:::-;323:3;316:37;241:118;;:::o;365:222::-;458:4;496:2;485:9;481:18;473:26;;509:71;577:1;566:9;562:17;553:6;509:71;:::i;:::-;365:222;;;;:::o;593:147::-;694:11;731:3;716:18;;593:147;;;;:::o;746:114::-;;:::o;866:398::-;1025:3;1046:83;1127:1;1122:3;1046:83;:::i;:::-;1039:90;;1138:93;1227:3;1138:93;:::i;:::-;1256:1;1251:3;1247:11;1240:18;;866:398;;;:::o;1270:379::-;1454:3;1476:147;1619:3;1476:147;:::i;:::-;1469:154;;1640:3;1633:10;;1270:379;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "153800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"charity()": "2530",
								"donate()": "infinite",
								"owner()": "2505",
								"tip()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 2342,
									"end": 3138,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 2342,
									"end": 3138,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2342,
									"end": 3138,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2425,
									"end": 2518,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 2425,
									"end": 2518,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2425,
									"end": 2518,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 2425,
									"end": 2518,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 2425,
									"end": 2518,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 2425,
									"end": 2518,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2425,
									"end": 2518,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2425,
									"end": 2518,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 2425,
									"end": 2518,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 2425,
									"end": 2518,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2425,
									"end": 2518,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2425,
									"end": 2518,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2425,
									"end": 2518,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2425,
									"end": 2518,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 2425,
									"end": 2518,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 2425,
									"end": 2518,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 2425,
									"end": 2518,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2425,
									"end": 2518,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 2425,
									"end": 2518,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2425,
									"end": 2518,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 2425,
									"end": 2518,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2425,
									"end": 2518,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2425,
									"end": 2518,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2425,
									"end": 2518,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2425,
									"end": 2518,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2425,
									"end": 2518,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2425,
									"end": 2518,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2425,
									"end": 2518,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2425,
									"end": 2518,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 2425,
									"end": 2518,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2425,
									"end": 2518,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2425,
									"end": 2518,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 2425,
									"end": 2518,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 2425,
									"end": 2518,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 2425,
									"end": 2518,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2472,
									"end": 2482,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 2464,
									"end": 2469,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2464,
									"end": 2469,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2464,
									"end": 2482,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 2464,
									"end": 2482,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 2464,
									"end": 2482,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2464,
									"end": 2482,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 2464,
									"end": 2482,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2464,
									"end": 2482,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2464,
									"end": 2482,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 2464,
									"end": 2482,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 2464,
									"end": 2482,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2464,
									"end": 2482,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2464,
									"end": 2482,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2464,
									"end": 2482,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2464,
									"end": 2482,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2464,
									"end": 2482,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 2464,
									"end": 2482,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 2464,
									"end": 2482,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2464,
									"end": 2482,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 2464,
									"end": 2482,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2502,
									"end": 2510,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2492,
									"end": 2499,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 2492,
									"end": 2499,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2492,
									"end": 2510,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 2492,
									"end": 2510,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 2492,
									"end": 2510,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2492,
									"end": 2510,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 2492,
									"end": 2510,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2492,
									"end": 2510,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2492,
									"end": 2510,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 2492,
									"end": 2510,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 2492,
									"end": 2510,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2492,
									"end": 2510,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2492,
									"end": 2510,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2492,
									"end": 2510,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2492,
									"end": 2510,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2492,
									"end": 2510,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 2492,
									"end": 2510,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 2492,
									"end": 2510,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2492,
									"end": 2510,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 2492,
									"end": 2510,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2425,
									"end": 2518,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2342,
									"end": 3138,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 2342,
									"end": 3138,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "25"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 1,
									"value": "25"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "tag",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 915,
									"end": 921,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 964,
									"end": 966,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 952,
									"end": 961,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 943,
									"end": 950,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 939,
									"end": 962,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 935,
									"end": 967,
									"name": "SLT",
									"source": 1
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "28"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 970,
									"end": 1049,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "tag",
									"source": 1,
									"value": "28"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "tag",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1090,
									"end": 1091,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "29"
								},
								{
									"begin": 1171,
									"end": 1178,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1162,
									"end": 1168,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1151,
									"end": 1160,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1147,
									"end": 1169,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 1115,
									"end": 1179,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "tag",
									"source": 1,
									"value": "29"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1061,
									"end": 1189,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 845,
									"end": 1196,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2342,
									"end": 3138,
									"name": "tag",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 2342,
									"end": 3138,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2342,
									"end": 3138,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2342,
									"end": 3138,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2342,
									"end": 3138,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2342,
									"end": 3138,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2342,
									"end": 3138,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 2342,
									"end": 3138,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2342,
									"end": 3138,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212200ec3e64562dd40db75f49bd2a3750649ccb40be808122e0fb4294e35ae2b2dfc64736f6c63430008140033",
									".code": [
										{
											"begin": 2342,
											"end": 3138,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 2342,
											"end": 3138,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2342,
											"end": 3138,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2342,
											"end": 3138,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2342,
											"end": 3138,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2342,
											"end": 3138,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2342,
											"end": 3138,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2342,
											"end": 3138,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2342,
											"end": 3138,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2342,
											"end": 3138,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 2342,
											"end": 3138,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 2342,
											"end": 3138,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 2342,
											"end": 3138,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2342,
											"end": 3138,
											"name": "PUSH",
											"source": 0,
											"value": "2755CD2D"
										},
										{
											"begin": 2342,
											"end": 3138,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2342,
											"end": 3138,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2342,
											"end": 3138,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2342,
											"end": 3138,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2342,
											"end": 3138,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 2342,
											"end": 3138,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2342,
											"end": 3138,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2342,
											"end": 3138,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2342,
											"end": 3138,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2342,
											"end": 3138,
											"name": "PUSH",
											"source": 0,
											"value": "934AA023"
										},
										{
											"begin": 2342,
											"end": 3138,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2342,
											"end": 3138,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 2342,
											"end": 3138,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2342,
											"end": 3138,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2342,
											"end": 3138,
											"name": "PUSH",
											"source": 0,
											"value": "ED88C68E"
										},
										{
											"begin": 2342,
											"end": 3138,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2342,
											"end": 3138,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 2342,
											"end": 3138,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2342,
											"end": 3138,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2342,
											"end": 3138,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2342,
											"end": 3138,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2342,
											"end": 3138,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2342,
											"end": 3138,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2342,
											"end": 3138,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2342,
											"end": 3138,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2342,
											"end": 3138,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 2342,
											"end": 3138,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2342,
											"end": 3138,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2342,
											"end": 3138,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2342,
											"end": 3138,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2342,
											"end": 3138,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2558,
											"end": 2669,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2558,
											"end": 2669,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2558,
											"end": 2669,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 2558,
											"end": 2669,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 2558,
											"end": 2669,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2558,
											"end": 2669,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 2558,
											"end": 2669,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2558,
											"end": 2669,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 2366,
											"end": 2386,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2366,
											"end": 2386,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2366,
											"end": 2386,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2366,
											"end": 2386,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2366,
											"end": 2386,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2366,
											"end": 2386,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 2366,
											"end": 2386,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2366,
											"end": 2386,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2366,
											"end": 2386,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2366,
											"end": 2386,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2366,
											"end": 2386,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 2366,
											"end": 2386,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2366,
											"end": 2386,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2366,
											"end": 2386,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 2366,
											"end": 2386,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 2366,
											"end": 2386,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2366,
											"end": 2386,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 2366,
											"end": 2386,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2366,
											"end": 2386,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2366,
											"end": 2386,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2366,
											"end": 2386,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 2366,
											"end": 2386,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2366,
											"end": 2386,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2366,
											"end": 2386,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 2366,
											"end": 2386,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2366,
											"end": 2386,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 2366,
											"end": 2386,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2366,
											"end": 2386,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2366,
											"end": 2386,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2366,
											"end": 2386,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2366,
											"end": 2386,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2366,
											"end": 2386,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2366,
											"end": 2386,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2366,
											"end": 2386,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2392,
											"end": 2414,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 2392,
											"end": 2414,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2392,
											"end": 2414,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2392,
											"end": 2414,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2392,
											"end": 2414,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2392,
											"end": 2414,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 2392,
											"end": 2414,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2392,
											"end": 2414,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2392,
											"end": 2414,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2392,
											"end": 2414,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2392,
											"end": 2414,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 2392,
											"end": 2414,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2392,
											"end": 2414,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2392,
											"end": 2414,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 2392,
											"end": 2414,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 2392,
											"end": 2414,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2392,
											"end": 2414,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 2392,
											"end": 2414,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2392,
											"end": 2414,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2392,
											"end": 2414,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2392,
											"end": 2414,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 2392,
											"end": 2414,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2392,
											"end": 2414,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2392,
											"end": 2414,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 2392,
											"end": 2414,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2392,
											"end": 2414,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 2392,
											"end": 2414,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2392,
											"end": 2414,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2392,
											"end": 2414,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2392,
											"end": 2414,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2392,
											"end": 2414,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2392,
											"end": 2414,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2392,
											"end": 2414,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2392,
											"end": 2414,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2974,
											"end": 3136,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 2974,
											"end": 3136,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2974,
											"end": 3136,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2974,
											"end": 3136,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2974,
											"end": 3136,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2974,
											"end": 3136,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2974,
											"end": 3136,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2974,
											"end": 3136,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2974,
											"end": 3136,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2974,
											"end": 3136,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2974,
											"end": 3136,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2974,
											"end": 3136,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2974,
											"end": 3136,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2974,
											"end": 3136,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 2974,
											"end": 3136,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 2974,
											"end": 3136,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2974,
											"end": 3136,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 2974,
											"end": 3136,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2974,
											"end": 3136,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 2558,
											"end": 2669,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 2558,
											"end": 2669,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2598,
											"end": 2604,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2610,
											"end": 2615,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2610,
											"end": 2615,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2610,
											"end": 2615,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2610,
											"end": 2615,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2610,
											"end": 2615,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2610,
											"end": 2615,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2610,
											"end": 2615,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2610,
											"end": 2615,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2610,
											"end": 2615,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2610,
											"end": 2615,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2610,
											"end": 2615,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2610,
											"end": 2620,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2610,
											"end": 2620,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2628,
											"end": 2637,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2610,
											"end": 2642,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2610,
											"end": 2642,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2610,
											"end": 2642,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 2610,
											"end": 2642,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2610,
											"end": 2642,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 2610,
											"end": 2642,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2610,
											"end": 2642,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 2610,
											"end": 2642,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2610,
											"end": 2642,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2610,
											"end": 2642,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2610,
											"end": 2642,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2610,
											"end": 2642,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2610,
											"end": 2642,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2610,
											"end": 2642,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2610,
											"end": 2642,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2610,
											"end": 2642,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 2610,
											"end": 2642,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 2610,
											"end": 2642,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 2610,
											"end": 2642,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 2610,
											"end": 2642,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2610,
											"end": 2642,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2610,
											"end": 2642,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2610,
											"end": 2642,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2610,
											"end": 2642,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 2610,
											"end": 2642,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2610,
											"end": 2642,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2610,
											"end": 2642,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2610,
											"end": 2642,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2610,
											"end": 2642,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 2610,
											"end": 2642,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2610,
											"end": 2642,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2610,
											"end": 2642,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2610,
											"end": 2642,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2610,
											"end": 2642,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2610,
											"end": 2642,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2610,
											"end": 2642,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2610,
											"end": 2642,
											"name": "PUSH",
											"source": 0,
											"value": "3F"
										},
										{
											"begin": 2610,
											"end": 2642,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 2610,
											"end": 2642,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2610,
											"end": 2642,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2610,
											"end": 2642,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2610,
											"end": 2642,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2610,
											"end": 2642,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2610,
											"end": 2642,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2610,
											"end": 2642,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 2610,
											"end": 2642,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2610,
											"end": 2642,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2610,
											"end": 2642,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 2610,
											"end": 2642,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2610,
											"end": 2642,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2610,
											"end": 2642,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2610,
											"end": 2642,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2610,
											"end": 2642,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 2610,
											"end": 2642,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 2610,
											"end": 2642,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2610,
											"end": 2642,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 2610,
											"end": 2642,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2610,
											"end": 2642,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2610,
											"end": 2642,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2610,
											"end": 2642,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2610,
											"end": 2642,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 2610,
											"end": 2642,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2610,
											"end": 2642,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2597,
											"end": 2642,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2597,
											"end": 2642,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2597,
											"end": 2642,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2660,
											"end": 2661,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2652,
											"end": 2662,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 2652,
											"end": 2662,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2652,
											"end": 2662,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2652,
											"end": 2662,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2652,
											"end": 2662,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2652,
											"end": 2662,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 2652,
											"end": 2662,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2587,
											"end": 2669,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2558,
											"end": 2669,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2366,
											"end": 2386,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 2366,
											"end": 2386,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2366,
											"end": 2386,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2366,
											"end": 2386,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2366,
											"end": 2386,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2366,
											"end": 2386,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2366,
											"end": 2386,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2366,
											"end": 2386,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2366,
											"end": 2386,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2366,
											"end": 2386,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2366,
											"end": 2386,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2366,
											"end": 2386,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2366,
											"end": 2386,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2366,
											"end": 2386,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2392,
											"end": 2414,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 2392,
											"end": 2414,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2392,
											"end": 2414,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2392,
											"end": 2414,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2392,
											"end": 2414,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2392,
											"end": 2414,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2392,
											"end": 2414,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2392,
											"end": 2414,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2392,
											"end": 2414,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2392,
											"end": 2414,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2392,
											"end": 2414,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2392,
											"end": 2414,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2392,
											"end": 2414,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2392,
											"end": 2414,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2392,
											"end": 2414,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2974,
											"end": 3136,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 2974,
											"end": 3136,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3010,
											"end": 3016,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3021,
											"end": 3028,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3021,
											"end": 3028,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3021,
											"end": 3028,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3021,
											"end": 3028,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3021,
											"end": 3028,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3021,
											"end": 3028,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3021,
											"end": 3028,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3021,
											"end": 3028,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3021,
											"end": 3028,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3021,
											"end": 3028,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3021,
											"end": 3028,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3021,
											"end": 3033,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3021,
											"end": 3033,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3040,
											"end": 3061,
											"name": "SELFBALANCE",
											"source": 0
										},
										{
											"begin": 3021,
											"end": 3066,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3021,
											"end": 3066,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3021,
											"end": 3066,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 3021,
											"end": 3066,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3021,
											"end": 3066,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 3021,
											"end": 3066,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3021,
											"end": 3066,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 3021,
											"end": 3066,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3021,
											"end": 3066,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3021,
											"end": 3066,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3021,
											"end": 3066,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3021,
											"end": 3066,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3021,
											"end": 3066,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3021,
											"end": 3066,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3021,
											"end": 3066,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3021,
											"end": 3066,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3021,
											"end": 3066,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 3021,
											"end": 3066,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 3021,
											"end": 3066,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 3021,
											"end": 3066,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3021,
											"end": 3066,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3021,
											"end": 3066,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3021,
											"end": 3066,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3021,
											"end": 3066,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 3021,
											"end": 3066,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3021,
											"end": 3066,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3021,
											"end": 3066,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3021,
											"end": 3066,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 3021,
											"end": 3066,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 3021,
											"end": 3066,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3021,
											"end": 3066,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3021,
											"end": 3066,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3021,
											"end": 3066,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3021,
											"end": 3066,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3021,
											"end": 3066,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 3021,
											"end": 3066,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3021,
											"end": 3066,
											"name": "PUSH",
											"source": 0,
											"value": "3F"
										},
										{
											"begin": 3021,
											"end": 3066,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 3021,
											"end": 3066,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3021,
											"end": 3066,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3021,
											"end": 3066,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3021,
											"end": 3066,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3021,
											"end": 3066,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3021,
											"end": 3066,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3021,
											"end": 3066,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 3021,
											"end": 3066,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3021,
											"end": 3066,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3021,
											"end": 3066,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 3021,
											"end": 3066,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3021,
											"end": 3066,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3021,
											"end": 3066,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3021,
											"end": 3066,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3021,
											"end": 3066,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 3021,
											"end": 3066,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 3021,
											"end": 3066,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3021,
											"end": 3066,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 3021,
											"end": 3066,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3021,
											"end": 3066,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 3021,
											"end": 3066,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3021,
											"end": 3066,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3021,
											"end": 3066,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 3021,
											"end": 3066,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3021,
											"end": 3066,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3009,
											"end": 3066,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3009,
											"end": 3066,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3009,
											"end": 3066,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3084,
											"end": 3085,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3076,
											"end": 3086,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 3076,
											"end": 3086,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3076,
											"end": 3086,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3076,
											"end": 3086,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3076,
											"end": 3086,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3076,
											"end": 3086,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 3076,
											"end": 3086,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2999,
											"end": 3136,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2974,
											"end": 3136,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7,
											"end": 133,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 7,
											"end": 133,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 84,
											"end": 126,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 77,
											"end": 82,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 73,
											"end": 127,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 62,
											"end": 127,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 62,
											"end": 127,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 133,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7,
											"end": 133,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7,
											"end": 133,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 133,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 139,
											"end": 235,
											"name": "tag",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 139,
											"end": 235,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 176,
											"end": 183,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 205,
											"end": 229,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 223,
											"end": 228,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 205,
											"end": 229,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 205,
											"end": 229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 205,
											"end": 229,
											"name": "tag",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 205,
											"end": 229,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 194,
											"end": 229,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 194,
											"end": 229,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 139,
											"end": 235,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 139,
											"end": 235,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 139,
											"end": 235,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 139,
											"end": 235,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 241,
											"end": 359,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 241,
											"end": 359,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 328,
											"end": 352,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 346,
											"end": 351,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 328,
											"end": 352,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 328,
											"end": 352,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 328,
											"end": 352,
											"name": "tag",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 328,
											"end": 352,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 323,
											"end": 326,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 316,
											"end": 353,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 241,
											"end": 359,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 241,
											"end": 359,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 241,
											"end": 359,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 365,
											"end": 587,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 365,
											"end": 587,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 458,
											"end": 462,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 496,
											"end": 498,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 485,
											"end": 494,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 481,
											"end": 499,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 473,
											"end": 499,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 473,
											"end": 499,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 509,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 577,
											"end": 578,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 566,
											"end": 575,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 562,
											"end": 579,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 553,
											"end": 559,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 509,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 509,
											"end": 580,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 509,
											"end": 580,
											"name": "tag",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 509,
											"end": 580,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 365,
											"end": 587,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 365,
											"end": 587,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 365,
											"end": 587,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 365,
											"end": 587,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 365,
											"end": 587,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 593,
											"end": 740,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 593,
											"end": 740,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 694,
											"end": 705,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 731,
											"end": 734,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 716,
											"end": 734,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 716,
											"end": 734,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 593,
											"end": 740,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 593,
											"end": 740,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 593,
											"end": 740,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 593,
											"end": 740,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 593,
											"end": 740,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 746,
											"end": 860,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 746,
											"end": 860,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 746,
											"end": 860,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 746,
											"end": 860,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 866,
											"end": 1264,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 866,
											"end": 1264,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1025,
											"end": 1028,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1046,
											"end": 1129,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 1127,
											"end": 1128,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1122,
											"end": 1125,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1046,
											"end": 1129,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 1046,
											"end": 1129,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1046,
											"end": 1129,
											"name": "tag",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 1046,
											"end": 1129,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1039,
											"end": 1129,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1039,
											"end": 1129,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1138,
											"end": 1231,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 1227,
											"end": 1230,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1138,
											"end": 1231,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1138,
											"end": 1231,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1138,
											"end": 1231,
											"name": "tag",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 1138,
											"end": 1231,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1256,
											"end": 1257,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1251,
											"end": 1254,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1247,
											"end": 1258,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1258,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1258,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 866,
											"end": 1264,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 866,
											"end": 1264,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 866,
											"end": 1264,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 866,
											"end": 1264,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1270,
											"end": 1649,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 1270,
											"end": 1649,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1454,
											"end": 1457,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1476,
											"end": 1623,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 1619,
											"end": 1622,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1476,
											"end": 1623,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 1476,
											"end": 1623,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1476,
											"end": 1623,
											"name": "tag",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 1476,
											"end": 1623,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1469,
											"end": 1623,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1469,
											"end": 1623,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1640,
											"end": 1643,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1633,
											"end": 1643,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1633,
											"end": 1643,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1270,
											"end": 1649,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1270,
											"end": 1649,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1270,
											"end": 1649,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1270,
											"end": 1649,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"Alchemy University/Self Destruct.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"charity()": "934aa023",
							"donate()": "ed88c68e",
							"owner()": "8da5cb5b",
							"tip()": "2755cd2d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_charity\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"charity\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"donate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tip\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Alchemy University/Self Destruct.sol\":\"Contract\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Alchemy University/Self Destruct.sol\":{\"keccak256\":\"0x9762bd4e2a680cb6bff528c386199d92797735720609d359c7efd42b940e4596\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://abf24fe16b5ac561bb45b8585820458ae39d628ab9aa82d3bb5f825b1bd4b7ae\",\"dweb:/ipfs/QmYYfH3ZmuQ8r9PKsxeyuy7As9SRuAho1S8acHXG8nkRTU\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 3,
								"contract": "Alchemy University/Self Destruct.sol:Contract",
								"label": "owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 5,
								"contract": "Alchemy University/Self Destruct.sol:Contract",
								"label": "charity",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"Alchemy University/Self Destruct.sol": {
				"ast": {
					"absolutePath": "Alchemy University/Self Destruct.sol",
					"exportedSymbols": {
						"Contract": [
							64
						]
					},
					"id": 65,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Contract",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 64,
							"linearizedBaseContracts": [
								64
							],
							"name": "Contract",
							"nameLocation": "2351:8:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "8da5cb5b",
									"id": 3,
									"mutability": "mutable",
									"name": "owner",
									"nameLocation": "2381:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 64,
									"src": "2366:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 2,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "2366:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "934aa023",
									"id": 5,
									"mutability": "mutable",
									"name": "charity",
									"nameLocation": "2407:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 64,
									"src": "2392:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 4,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "2392:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 19,
										"nodeType": "Block",
										"src": "2454:64:0",
										"statements": [
											{
												"expression": {
													"id": 13,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 10,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3,
														"src": "2464:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 11,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "2472:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 12,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2476:6:0",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "2472:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2464:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 14,
												"nodeType": "ExpressionStatement",
												"src": "2464:18:0"
											},
											{
												"expression": {
													"id": 17,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 15,
														"name": "charity",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "2492:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 16,
														"name": "_charity",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "2502:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2492:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 18,
												"nodeType": "ExpressionStatement",
												"src": "2492:18:0"
											}
										]
									},
									"id": 20,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 8,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 7,
												"mutability": "mutable",
												"name": "_charity",
												"nameLocation": "2445:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "2437:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 6,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2437:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2436:18:0"
									},
									"returnParameters": {
										"id": 9,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2454:0:0"
									},
									"scope": 64,
									"src": "2425:93:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 23,
										"nodeType": "Block",
										"src": "2550:2:0",
										"statements": []
									},
									"id": 24,
									"implemented": true,
									"kind": "receive",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 21,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2531:2:0"
									},
									"returnParameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2550:0:0"
									},
									"scope": 64,
									"src": "2524:28:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 41,
										"nodeType": "Block",
										"src": "2587:82:0",
										"statements": [
											{
												"assignments": [
													28,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 28,
														"mutability": "mutable",
														"name": "s",
														"nameLocation": "2603:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 41,
														"src": "2598:6:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 27,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2598:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 36,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 34,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2639:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 29,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3,
																"src": "2610:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 30,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2616:4:0",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2610:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 33,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"expression": {
																	"id": 31,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2628:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 32,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2632:5:0",
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "2628:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2610:28:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2610:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2597:45:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 38,
															"name": "s",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 28,
															"src": "2660:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 37,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2652:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 39,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2652:10:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 40,
												"nodeType": "ExpressionStatement",
												"src": "2652:10:0"
											}
										]
									},
									"functionSelector": "2755cd2d",
									"id": 42,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tip",
									"nameLocation": "2567:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2570:2:0"
									},
									"returnParameters": {
										"id": 26,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2587:0:0"
									},
									"scope": 64,
									"src": "2558:111:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 62,
										"nodeType": "Block",
										"src": "2999:137:0",
										"statements": [
											{
												"assignments": [
													46,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 46,
														"mutability": "mutable",
														"name": "s",
														"nameLocation": "3015:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 62,
														"src": "3010:6:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 45,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3010:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 57,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 55,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3063:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 47,
																"name": "charity",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5,
																"src": "3021:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 48,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3029:4:0",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "3021:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 54,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"expression": {
																	"arguments": [
																		{
																			"id": 51,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "3048:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Contract_$64",
																				"typeString": "contract Contract"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Contract_$64",
																				"typeString": "contract Contract"
																			}
																		],
																		"id": 50,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3040:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 49,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "3040:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 52,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3040:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 53,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3054:7:0",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "3040:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "3021:41:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 56,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3021:45:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3009:57:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 59,
															"name": "s",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 46,
															"src": "3084:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 58,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3076:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 60,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3076:10:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 61,
												"nodeType": "ExpressionStatement",
												"src": "3076:10:0"
											}
										]
									},
									"functionSelector": "ed88c68e",
									"id": 63,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "donate",
									"nameLocation": "2983:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2989:2:0"
									},
									"returnParameters": {
										"id": 44,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2999:0:0"
									},
									"scope": 64,
									"src": "2974:162:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 65,
							"src": "2342:796:0",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "32:3107:0"
				},
				"id": 0
			}
		}
	}
}